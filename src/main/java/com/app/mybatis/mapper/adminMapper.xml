<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">

	<!-- FAQ -->
	<!-- FAQ 전체 조회 -->
	<select id="selectFaqAll" resultType="FaqVO">
		SELECT ID, FAQ_TITLE, FAQ_CATEGORY 
		FROM TBL_FAQ
		ORDER BY ID
	</select>
	
	<!-- FAQ 하나 조회 -->
	<select id="selectFaqById" parameterType="Long" resultType="FaqVO">
		SELECT ID, FAQ_TITLE, FAQ_CONTENT, FAQ_CATEGORY 
		FROM TBL_FAQ
		WHERE ID = #{id}
	</select>
	
	<!-- FAQ 등록한후 바로 read -->
	<select id="selectLastFaqById" resultType="Long">
		SELECT ID
		FROM (
			SELECT ID
			FROM TBL_FAQ
			ORDER BY ID DESC
		)
		WHERE ROWNUM = 1		
	</select> 
	
	<!-- FAQ 등록 -->
	<insert id="insertFaq" parameterType="FaqVO">
		INSERT INTO TBL_FAQ
		VALUES(SEQ_FAQ.NEXTVAL, #{faqTitle}, #{faqContent}, #{faqCategory})
	</insert>
	
	<!-- FAQ 수정 -->
	<update id="updateFaq" parameterType="FaqVO">
		UPDATE TBL_FAQ
		SET FAQ_CONTENT = #{faqContent}
		WHERE ID = #{id}
	</update>
	
	<!-- FAQ 삭제 -->
	<delete id="deleteFaq" parameterType="Long">
		DELETE FROM TBL_FAQ
		WHERE ID = #{id}
	</delete>


	<!-- 1 : 1 문의 -->
	<!-- 답변 대기 리스트 -->
	<select id="selectWaitingQna" parameterType="Long" resultType="QnaDTO">
		SELECT Q.ID, Q.QNA_TITLE, Q.QNA_TIME, Q.QNA_CATEGORY
		FROM TBL_QNA Q
		LEFT JOIN TBL_QNA_ANSWER A
		ON Q.ID = A.QNA_ID
		WHERE A.QNA_ID IS NULL
		ORDER BY Q.ID
	</select>
	
	<!-- 답변 완료 리스트 -->
	<select id="selectCompletedQna" parameterType="Long" resultType="QnaDTO">
		SELECT Q.ID, Q.QNA_TITLE, Q.QNA_TIME, Q.QNA_CATEGORY
		FROM TBL_QNA Q
		JOIN TBL_QNA_ANSWER A
		ON Q.ID = A.QNA_ID
		WHERE A.QNA_ID IS NOT NULL
		ORDER BY Q.ID
	</select>	
	
	<!-- 답변 하나 조회 -->
	<select id="selectQnaById" parameterType="Long" resultType="QnaDTO">
		SELECT 
			Q.ID,
			Q.QNA_TITLE,
			Q.QNA_TIME,
			Q.QNA_CATEGORY,
			Q.QNA_CONTENT,
			U.USER_NAME,
			U.USER_EMAIL,
			U.USER_PHONE,
			A.QNA_ANSWER_CONTENT,
			A.QNA_ANSWER_TIME
		FROM TBL_QNA Q
		JOIN TBL_USER U 
		ON Q.USER_ID = U.ID
		LEFT JOIN TBL_QNA_ANSWER A ON Q.ID = A.QNA_ID
		WHERE Q.ID = #{id}		
	</select>

	<!-- 답변 달기 -->
	<insert id="insertQnaAnswer" parameterType="QnaDTO">
		INSERT INTO TBL_QNA_ANSWER(ID, QNA_ID, QNA_ANSWER_TITLE, QNA_ANSWER_CONTENT, QNA_ANSWER_TIME)
		VALUES(SEQ_QNA_ANSWER.NEXTVAL, #{qnaId}, #{qnaAnswerTitle}, #{qnaAnswerContent}, CURRENT_TIMESTAMP)
	</insert>






	
	<!-- 양식관리 -->
	
	<!-- 작가승인 -->
	<update id="updateApplyArtist" parameterType="Long">
		UPDATE TBL_USER
		SET USER_WRITER_STATUS = '승인'
		WHERE ID = #{id}
	</update>
	
	<!-- 작가거절 -->
	<update id="updateRejectArtist" parameterType="Long">
		UPDATE TBL_USER
		SET USER_WRITER_STATUS = '거절'
		WHERE ID = #{id}
	</update>
	
	<!-- 학생증승인 -->

	<!-- 학생증거절 -->

	<!-- 업사이클승인 -->
	<update id="updateApplyUpcycle" parameterType="Long">
		UPDATE TBL_UPCYCLE
		SET UPCYCLE_STATUS = '승인'
		WHERE ID = #{id}
	</update>
	
	<!-- 업사이클거절 -->
	<update id="updateRejectUpcycle" parameterType="Long">
		UPDATE TBL_UPCYCLE
		SET UPCYCLE_STATUS = '거절'
		WHERE ID = #{id}
	</update>	
	
	<!-- 대학교전시회승인 -->
	
	<!-- 대학교전시회거절 -->
	
	
	
	<!-- 회원관리 -->
	<!-- 관리자 Update -->
	<update id="userAdmin" parameterType="Long">
		UPDADTE TBL_USER
		SET USER_ADMIN_OK = 1
		WHERE ID = ${id}
	</update>
	
	<!-- 회원관리 회원전체 조회 -->
	<select id="selectUserAll" resultType="UserVO">
		SELECT USER_NAME, USER_IDENTIFICATION, USER_PHONE, USER_BAN_OK
		FROM TBL_USER
	</select>
	 
	 <!-- 회원관리 회원한명 Read -->	
	<select id="selectId" parameterType="Long" resultType="MajorDTO">
		SELECT TBU.ID TBU.USER_IDENTIFICATION, TBU.USER_NAME, TBU.USER_PHONE, TBU.USER_EMAIL, TBU.USER_ADDRESS, TBUS.UNIVERSITY_NAME			
		FROM TBL_USER TBU
		JOIN TBL_MAJOR TBM
		ON TBU.MAJOR_ID = TBM.ID 
		JOIN TBL_UNIVERSITY TBUS 
		ON TBM.UNIVERSITY_ID = TBUS.ID
		WHERE TBU.ID = #{id}
	</select>
	

	

</mapper>







